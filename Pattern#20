#include <iostream>
#include <string>
class Strategy {
public:
    virtual void execute() const = 0;  
};

class ConcreteStrategyA : public Strategy {
public:
    void execute() const override {
        std::cout << "Executing strategy A" << std::endl;
    }
};
class ConcreteStrategyB : public Strategy {
public:
    void execute() const override {
        std::cout << "Executing strategy B" << std::endl;
    }
};
class Context {
private:
    Strategy* strategy;  

public:
    Context(Strategy* initialStrategy) : strategy(initialStrategy) {}
    void setStrategy(Strategy* newStrategy) {
        strategy = newStrategy;
    }
    void executeStrategy() const {
        strategy->execute();
    }
};
int main() {
    ConcreteStrategyA strategyA;
    ConcreteStrategyB strategyB;
    Context context(&strategyA);
    context.executeStrategy();
    context.setStrategy(&strategyB);
    context.executeStrategy();

    return 0;
}
